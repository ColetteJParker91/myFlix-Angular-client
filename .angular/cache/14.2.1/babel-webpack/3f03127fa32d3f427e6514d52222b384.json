{"ast":null,"code":"import { GenreComponent } from '../genre/genre.component';\nimport { DirectorComponent } from '../director/director.component';\nimport { SynopsisComponent } from '../synopsis/synopsis.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"../navbar/navbar.component\";\nimport * as i9 from \"../footer/footer.component\";\n\nfunction MovieCardComponent_mat_card_2_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const movie_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.addToFav(movie_r1._id));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 7);\n    i0.ɵɵtext(2, \"favorite_border\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction MovieCardComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 2)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"img\", 3);\n    i0.ɵɵelementStart(7, \"mat-card-actions\")(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.openGenreDialog(movie_r1.Genre.Name, movie_r1.Genre.Description));\n    });\n    i0.ɵɵtext(9, \" Genre \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openDirectorDialog(movie_r1.Director.Name, movie_r1.Director.Bio));\n    });\n    i0.ɵɵtext(11, \" Director \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.openSynopsisDialog(movie_r1.Title, movie_r1.Description));\n    });\n    i0.ɵɵtext(13, \" Synopsis \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, MovieCardComponent_mat_card_2_button_14_Template, 3, 0, \"button\", 5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(movie_r1.Title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Directed by: \", movie_r1.Director.Name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", movie_r1.ImagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", movie_r1.Title);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isFav(movie_r1._id));\n  }\n}\n\nexport let MovieCardComponent = /*#__PURE__*/(() => {\n  class MovieCardComponent {\n    constructor(fetchApiData, dialog, snackBar) {\n      this.fetchApiData = fetchApiData;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.movies = [];\n      this.favoriteMovies = [];\n    }\n\n    ngOnInit() {\n      this.getMovies();\n      this.getFavoriteMovies();\n    }\n    /**\n     * Gets movies from api call and sets the movies state to return JSON file\n     * @returns array holding movies objects\n     * @function getAllMovies\n     */\n\n\n    getMovies() {\n      this.fetchApiData.getAllMovies().subscribe(resp => {\n        this.movies = resp;\n        console.log(this.movies);\n        return this.movies;\n      });\n    }\n    /**\n     * Gets favorite movies from api call and sets the favorite movies variable to return JSON file\n     * @returns array holding ids of user's favorite movies\n     * @function getFavoriteMovies\n     */\n\n\n    getFavoriteMovies() {\n      this.fetchApiData.getFavoriteMovies().subscribe(resp => {\n        this.favoriteMovies = resp;\n        console.log(this.favoriteMovies);\n        return this.favoriteMovies;\n      });\n    }\n    /**\n     * checks if a movie is included in the user's list of favorite movies\n     * @param id\n     * @returns true, if the movie is a favorite move, else false\n     */\n\n\n    isFav(id) {\n      return this.favoriteMovies.includes(id);\n    }\n    /**\n    * opens the user genre dialog from GenreComponent to displaying details\n    * @param name\n    * @param description\n    */\n\n\n    openGenreDialog(name, description) {\n      this.dialog.open(GenreComponent, {\n        data: {\n          Name: name,\n          Description: description\n        },\n        // Assign dialog width\n        width: '500px'\n      });\n    }\n    /**\n    * opens the user director dialog from DirectorComponent to displaying details\n    * @param name\n    * @param bio\n    * @param birthday\n    */\n\n\n    openDirectorDialog(name, bio, birthday) {\n      this.dialog.open(DirectorComponent, {\n        data: {\n          Name: name,\n          Bio: bio,\n          Birthday: birthday\n        },\n        // Assign dialog width\n        width: '500px'\n      });\n    }\n    /**\n     * opens the user synopsis dialog from SynopsisComponent to displaying details\n     * @param title\n     * @param description\n     */\n\n\n    openSynopsisDialog(title, description) {\n      this.dialog.open(SynopsisComponent, {\n        data: {\n          Title: title,\n          Description: description\n        },\n        // Assign dialog width\n        width: '500px'\n      });\n    }\n    /**\n     * adds a movie to the list of favorite movies via an API call\n     * @param id\n     * @function addFavoriteMovie\n     */\n\n\n    addToFavoriteMovies(id) {\n      console.log(id);\n      this.fetchApiData.addFavoriteMovie(id).subscribe(result => {\n        console.log(result);\n        this.ngOnInit();\n      });\n    }\n    /**\n     * removes a movie from the list of favorite movies via an API call\n     * @param id\n     * @function removeFavoriteMovie\n     */\n\n\n    removeFromFavoriteMovies(id) {\n      console.log(id);\n      this.fetchApiData.removeFavoriteMovie(id).subscribe(result => {\n        console.log(result);\n        this.ngOnInit();\n      });\n    }\n\n  }\n\n  MovieCardComponent.ɵfac = function MovieCardComponent_Factory(t) {\n    return new (t || MovieCardComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n\n  MovieCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MovieCardComponent,\n    selectors: [[\"app-movie-card\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"homepage\", 2, \"display\", \"flex\"], [\"style\", \"flex: 1 1 auto;\", 4, \"ngFor\", \"ngForOf\"], [2, \"flex\", \"1 1 auto\"], [3, \"src\", \"alt\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\"], [2, \"color\", \"black\"]],\n    template: function MovieCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵtemplate(2, MovieCardComponent_mat_card_2_Template, 15, 5, \"mat-card\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"app-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.MatButton, i6.MatCard, i6.MatCardHeader, i6.MatCardTitle, i6.MatCardSubtitle, i6.MatCardActions, i7.MatIcon, i8.NavbarComponent, i9.FooterComponent],\n    styles: [\".movie-view[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;padding:50px 0;background-color:#eef2f6}.mat-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;position:relative;box-shadow:10px 5px 5px #e9ecef;background-color:#fff;max-width:280px;width:280px;margin:15px;padding:20px 3px}.mat-card-header[_ngcontent-%COMP%]{height:80px;display:flex;align-items:center;color:#393f46}.movies-title[_ngcontent-%COMP%]{display:flex;max-width:210px;justify-content:center;text-align:center;line-height:normal}img[_ngcontent-%COMP%]{width:250px;height:350px;object-fit:contain}.mat-icon-button[_ngcontent-%COMP%]{position:absolute;right:5px;top:5px}\"]\n  });\n  return MovieCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}